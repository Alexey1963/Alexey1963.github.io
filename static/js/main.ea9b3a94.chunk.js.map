{"version":3,"sources":["redux/reducer.js","redux/actions.js","redux/store.js","components/Header/Header.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","index.js"],"names":["initialState","movies","favoriteMovies","favoriteMoviesId","reducer","state","action","type","list","payload","newState","map","x","title","Title","poster","Poster","year","Year","imdbID","id","newItem","find","newFavoriteMovies","filter","store","createStore","Header","className","Component","SearchBox","searchLine","api_key","searchLineChangeHandler","e","setState","target","value","searchBoxSubmitHandler","a","preventDefault","fetch","res","json","data","props","refreshMovies","Search","this","onSubmit","placeholder","onChange","disabled","connect","dispatch","renderMovieList","MovieItem","addItem","addFavoriteMovies","src","alt","onClick","addMovieToList","Movies","moviesArr","movie","key","Favorites","changeInput","currentTarget","saveMovieList","favoriteArr","idsArr","message","method","headers","body","JSON","stringify","response","result","storeFavoriteList","deleteItem","removeFavoriteItem","favoriteListId","item","to","removeMovieFromList","storeMovieListId","MainPage","ListPage","loadItems","newMovies","listTitle","prArr","then","Promise","all","dataArr","forEach","objForPush","push","href","rel","App","path","exact","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea9b3a94.chunk.js","sourcesContent":["import { RENDER_MOVIE_LIST, ADD_MOVIE_TO_LIST, REMOVE_MOVIE_FROM_LIST, STORE_MOVIE_LIST_ID } from \"./actions\";\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    //     {\r\n    //         imdbID: 'tt3896198',\r\n    //         title: \"Guardians of the Galaxy Vol. 2\",\r\n    //         year: 2017,\r\n    //         poster: \"https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg\"\r\n\r\n    //     },\r\n    //     {\r\n    //         imdbID: 'tt0068646',\r\n    //         title: \"The Godfather\",\r\n    //         year: 1972,\r\n    //         poster: \"https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\r\n\r\n    //     }\r\n    // ],\r\n    favoriteMovies: [],\r\n    //     { \r\n    //         imdbID: 'tt0068646', \r\n    //         title: 'The Godfather', \r\n    //         year: 1972 \r\n    //     }\r\n    // ],\r\n    favoriteMoviesId: ''\r\n\r\n    // cart: [1]\r\n}\r\n\r\nfunction reducer(state=initialState, action) {\r\n\r\n    const { movies, favoriteMovies } = state;\r\n    \r\n    switch(action.type) {\r\n\r\n        case RENDER_MOVIE_LIST:\r\n            const { list } = action.payload;\r\n            const newState = list.map((x) =>{\r\n                return {\r\n                    title: x.Title,\r\n                    poster: x.Poster,\r\n                    year: x.Year,\r\n                    imdbID: x.imdbID\r\n                }\r\n            })\r\n            return ({...state, movies: newState});\r\n            \r\n        case ADD_MOVIE_TO_LIST:\r\n            const {id} = action.payload;\r\n            const newItem = movies.find((x) => x.imdbID === id)\r\n\r\n            if(!favoriteMovies.find((x) => x.imdbID === id)) {\r\n                const newFavoriteMovies = [...favoriteMovies, newItem]\r\n                return {...state, favoriteMovies: newFavoriteMovies, favoriteMoviesId: ''}\r\n            };\r\n            return state\r\n\r\n        case REMOVE_MOVIE_FROM_LIST:\r\n            const newFavoriteMovies = favoriteMovies.filter((x) => x.imdbID !== action.payload.id)\r\n            return {...state, favoriteMovies: newFavoriteMovies, favoriteMoviesId: ''}\r\n\r\n        case STORE_MOVIE_LIST_ID:\r\n            return {...state, favoriteMoviesId: action.payload.id}\r\n\r\n        default:\r\n              \r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","const RENDER_MOVIE_LIST = 'RENDER_MOVIE_LIST'\r\nconst ADD_MOVIE_TO_LIST = 'ADD_MOVIE_TO_LIST'\r\nconst REMOVE_MOVIE_FROM_LIST ='REMOVE_MOVIE_FROM_LIST'\r\nconst STORE_MOVIE_LIST_ID = 'STORE_MOVIE_LIST_ID'\r\n\r\nfunction renderMovieList (list) {\r\n    return {\r\n        type: RENDER_MOVIE_LIST,\r\n        payload: {\r\n          list: list\r\n        }  \r\n    }\r\n}\r\n\r\nfunction addMovieToList(id) {\r\n    return {\r\n        type: ADD_MOVIE_TO_LIST,\r\n        payload: {\r\n          id: id\r\n        }  \r\n    }\r\n}\r\n\r\nfunction removeMovieFromList(id) {\r\n  return {\r\n      type: REMOVE_MOVIE_FROM_LIST,\r\n      payload: {\r\n        id: id\r\n      }  \r\n  }\r\n}\r\n\r\nfunction storeMovieListId(id) {\r\n  return {\r\n      type: STORE_MOVIE_LIST_ID,\r\n      payload: {\r\n        id: id\r\n      }  \r\n  }\r\n}\r\n\r\nexport { renderMovieList, addMovieToList, removeMovieFromList, storeMovieListId, \r\n         RENDER_MOVIE_LIST, ADD_MOVIE_TO_LIST, REMOVE_MOVIE_FROM_LIST, STORE_MOVIE_LIST_ID }","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    render() { \r\n        return (\r\n            <header className=\"header\">\r\n                <h1 className=\"header__title\">\r\n                    MustSee\r\n                </h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport './SearchBox.css';\r\nimport { renderMovieList } from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchBox extends Component {\r\n\r\n    state = {\r\n        searchLine: '',\r\n        api_key: 'acd003e3'\r\n    }\r\n\r\n    searchLineChangeHandler = (e) => {\r\n        this.setState({ searchLine: e.target.value });\r\n    }\r\n\r\n    searchBoxSubmitHandler = async (e) => {\r\n\r\n        if(e) {\r\n            e.preventDefault();  \r\n        }\r\n        const {searchLine, api_key} = this.state;\r\n        const res = await fetch(`http://www.omdbapi.com/?s=${searchLine}&apikey=${api_key}`);\r\n        const data = await res.json()\r\n        this.props.refreshMovies(data.Search)\r\n    }\r\n\r\n    render() {\r\n        const { searchLine } = this.state;\r\n\r\n        return (\r\n            <div className=\"search-box\">\r\n                <form className=\"search-box__form\" onSubmit={this.searchBoxSubmitHandler}>\r\n                    <label className=\"search-box__form-label\">\r\n                        Искать фильм по названию:\r\n                        <input\r\n                            value={searchLine}\r\n                            type=\"text\"\r\n                            className=\"search-box__form-input\"\r\n                            placeholder=\"Например, Shawshank Redemption\"\r\n                            onChange={this.searchLineChangeHandler}\r\n                        />\r\n                    </label>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"search-box__form-submit\"\r\n                        disabled={!searchLine}\r\n                    >\r\n                        Искать\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        refreshMovies: (list) => dispatch(renderMovieList(list))\r\n    }\r\n}\r\n\r\nexport default connect( null, mapDispatchToProps)(SearchBox);\r\n","import React, { Component } from 'react';\r\nimport './MovieItem.css';\r\nimport { addMovieToList } from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass MovieItem extends Component {\r\n\r\n    addItem = (id) => {\r\n        this.props.addFavoriteMovies(id)\r\n    }\r\n\r\n    render() {\r\n        const { title, year, poster, imdbID } = this.props;\r\n\r\n        return (\r\n            <article className=\"movie-item\">\r\n                <img className=\"movie-item__poster\" src={poster} alt={title} />\r\n                <div className=\"movie-item__info\">\r\n                    <h3 className=\"movie-item__title\">{title}&nbsp;({year})</h3>\r\n                    <button type=\"button\" \r\n                            className=\"movie-item__add-button\"\r\n                            onClick={() => this.addItem(imdbID)}>Добавить в список</button>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n \r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addFavoriteMovies: (id) => dispatch(addMovieToList(id))\r\n    }\r\n}\r\n \r\nexport default connect(null, mapDispatchToProps)(MovieItem);","import React, { Component } from 'react';\r\nimport MovieItem from '../MovieItem/MovieItem';\r\nimport './Movies.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Movies extends Component {\r\n    \r\n    render() { \r\n        const {moviesArr} = this.props\r\n\r\n        return ( \r\n            <ul className=\"movies\">\r\n                {moviesArr.map((movie) => (\r\n                    <li className=\"movies__item\" key={movie.imdbID}>\r\n                        <MovieItem {...movie} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        moviesArr: state.movies\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null )(Movies);","import React, { Component } from 'react';\r\nimport './Favorites.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeMovieFromList, storeMovieListId } from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Favorites extends Component {\r\n    state = {\r\n        title: '',\r\n        movies: []\r\n    }\r\n\r\n    changeInput = (e) => {\r\n        this.setState({title: e.currentTarget.value})\r\n    }\r\n\r\n    saveMovieList = async () => {\r\n\r\n          const { favoriteArr } = this.props;\r\n          const { title } = this.state;\r\n          const idsArr = favoriteArr.map((x) => x.imdbID)\r\n          let message = {title, movies: idsArr};\r\n\r\n          let response = await fetch('https://acb-api.algoritmika.org/api/movies/list', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(message)\r\n          });\r\n          \r\n          let result = await response.json()\r\n          this.props.storeFavoriteList(result.id)\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.props.removeFavoriteItem(id);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {title}=this.state\r\n        const {favoriteArr, favoriteListId}=this.props\r\n\r\n        return (\r\n            <div className=\"favorites\">\r\n                <input value={title} \r\n                        className=\"favorites__name\"\r\n                        placeholder=\"Введите название списка\" \r\n                        onChange={this.changeInput} \r\n                />\r\n                <ul className=\"favorites__list\">\r\n                    {favoriteArr.map((item) => {\r\n                        return (\r\n                        <li key={item.imdbID}>\r\n                            <p>{item.title} ({item.year})</p>\r\n                            <button type=\"button\" \r\n                                    className=\"favorites__remove\"\r\n                                    onClick={() => {this.deleteItem(item.imdbID)}}\r\n                                    >Удалить\r\n                            </button>\r\n                        </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                {!favoriteListId && <button type=\"button\" \r\n                        className=\"favorites__save\"\r\n                        onClick={this.saveMovieList}\r\n                        >Сохранить список\r\n                </button>}\r\n            {favoriteListId && <Link to={`/list/:${favoriteListId}`}>Ссылка на {title}</Link>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        favoriteArr: state.favoriteMovies,\r\n        favoriteListId: state.favoriteMoviesId\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        removeFavoriteItem: (id) => dispatch(removeMovieFromList(id)),\r\n        storeFavoriteList: (id) => dispatch(storeMovieListId (id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\r\n","import React, { Component } from 'react';\r\nimport './MainPage.css';\r\nimport Header from '../../components/Header/Header';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\nimport Movies from '../../components/Movies/Movies';\r\nimport Favorites from '../../components/Favorites/Favorites';\r\n\r\nclass MainPage extends Component {\r\n    render() { \r\n        return (\r\n            <div className=\"main-page\">\r\n                <Header />\r\n                <main className=\"main-page__content\">\r\n                    <section className=\"main-page__main-section\">\r\n                        <div className=\"main-page__search-box\">\r\n                            <SearchBox />\r\n                        </div>\r\n                        <div className=\"main-page__movies\">\r\n                            <Movies />\r\n                        </div>\r\n                    </section>\r\n                    <aside className=\"main-page__favorites\">\r\n                        <Favorites />\r\n                    </aside>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport './ListPage.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ListPage extends Component {\r\n    state = {\r\n        api_key: 'acd003e3',\r\n        title: '',\r\n        movies: []\r\n    }\r\n\r\n    loadItems = async () => {\r\n        const { favoriteListId: id } = this.props;\r\n        const newMovies = [...this.state.movies]\r\n\r\n        const res = await fetch(`https://acb-api.algoritmika.org/api/movies/list/${id}`);\r\n        const data = await res.json();\r\n        const listTitle = data.title\r\n\r\n        const prArr = data.movies.map(id => {\r\n            return fetch(`http://www.omdbapi.com/?i=${id}&apikey=${this.state.api_key}`)\r\n            .then(res => res.json())\r\n        })\r\n\r\n        Promise.all(prArr)\r\n            .then(dataArr => {\r\n                dataArr.forEach(data => {\r\n                    const objForPush = {\r\n                        title: data.Title,\r\n                        year: data.Year,\r\n                        poster: data.Poster,\r\n                        imdbID: data.imdbID\r\n                    }\r\n                    newMovies.push(objForPush)\r\n                })\r\n                this.setState({movies: newMovies, title: listTitle})\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadItems()\r\n    }\r\n\r\n    render() {\r\n        const {movies, title} = this.state\r\n        return (\r\n            <div className=\"list-page\">\r\n                <h1 className=\"list-page__title\">{title}</h1>\r\n                <ul>\r\n                    {movies && movies.map((item) => {\r\n                        return (\r\n                            <li key={item.imdbID}>\r\n                                <a href={`https://www.imdb.com/title/${item.imdbID}/`} target=\"_blank\" rel=\"noopener noreferrer\">{item.title} ({item.year})</a>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        favoriteListId: state.favoriteMoviesId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ListPage);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport ListPage from './pages/ListPage/ListPage';\r\n\r\nimport './reset.css';\r\nimport './common.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const {favoriteListId} = this.props;\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainPage} />\r\n          <Route path={`/list/:${favoriteListId}`} exact component={ListPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      favoriteListId: state.favoriteMoviesId\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}